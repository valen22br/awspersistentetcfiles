"use strict";var _a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.Schedule=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),core_1=require("../../core");class Schedule extends core_1.Schedule{static expression(expression,timeZone){try{jsiiDeprecationWarnings.aws_cdk_lib_TimeZone(timeZone)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.expression),error}return super.protectedExpression(expression,timeZone)}static cron(options){try{jsiiDeprecationWarnings.aws_cdk_lib_CronOptions(options)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.cron),error}const cronSplit=super.protectedCron({weekDay:"*",day:"*",...options}).expressionString.slice(5).split(" ");cronSplit.pop();const autoscalingCron=cronSplit.join(" ");return new class extends Schedule{constructor(){super(...arguments),this.expressionString=autoscalingCron,this.timeZone=options.timeZone}_bind(scope){return options.minute||core_1.Annotations.of(scope).addWarningV2("@aws-cdk/aws-autoscaling:scheduleDefaultRunsEveryMinute","cron: If you don't pass 'minute', by default the event runs every minute. Pass 'minute: '*'' if that's what you intend, or 'minute: 0' to run once per hour instead."),Schedule.expression(this.expressionString,this.timeZone)}}}}exports.Schedule=Schedule,_a=JSII_RTTI_SYMBOL_1,Schedule[_a]={fqn:"aws-cdk-lib.aws_autoscaling.Schedule",version:"2.97.0"};
