import { Construct } from 'constructs';
import { Duration } from './duration';
import { TimeZone } from './time-zone';
/**
 * A Core Schedule. This construct is not meant to be used as is or exposed to consumers in other modules.
 * It is meant to be extended by other modules that require some sort of schedule implementation. All
 * methods in `core.Schedule` are protected, so that construct authors can decide which APIs to expose.
 *
 * @see https://docs.aws.amazon.com/eventbridge/latest/userguide/scheduled-events.html
 */
export declare abstract class Schedule {
    /**
     * Construct a one-time schedule from a date.
     *
     * @param date The date and time to use. The millisecond part will be ignored.
     * @param timeZone The time zone to use for interpreting the date. Default: - UTC
     */
    protected static protectedAt(date: Date, timeZone?: TimeZone): Schedule;
    /**
     * Construct a schedule from a literal schedule expression
     *
     * @param expression The expression to use. Must be in a format that EventBridge will recognize
     * @param timeZone The time zone, if applicable. This is only valid for 'at' and 'cron' expressions
     */
    protected static protectedExpression(expression: string, timeZone?: TimeZone): Schedule;
    /**
     * Construct a schedule from an interval and a time unit
     *
     * Rates may be defined with any unit of time, but when converted into minutes, the duration must be a positive whole number of minutes.
     */
    protected static protectedRate(duration: Duration): Schedule;
    /**
     * Create a schedule from a set of cron fields.
     *
     * @param module the module calling protectedCron, if you want module-specific warnings (i.e. aws-applicationautoscaling)
     */
    protected static protectedCron(options: CronOptions, module?: string): Schedule;
    /**
     * Retrieve the expression for this schedule.
     */
    abstract readonly expressionString: string;
    /**
     * The timezone of the expression, if applicable.
     */
    readonly timeZone?: TimeZone;
    protected constructor();
    /**
     * @internal
     */
    abstract _bind(scope: Construct): void;
}
/**
 * Options to configure a cron expression
 *
 * All fields are strings so you can use complex expressions. Absence of
 * a field implies '*' or '?', whichever one is appropriate.
 *
 * @see https://docs.aws.amazon.com/eventbridge/latest/userguide/scheduled-events.html#cron-expressions
 */
export interface CronOptions {
    /**
     * The minute to run this rule at
     *
     * @default - Every minute
     */
    readonly minute?: string;
    /**
     * The hour to run this rule at
     *
     * @default - Every hour
     */
    readonly hour?: string;
    /**
     * The day of the month to run this rule at
     *
     * @default - Every day of the month
     */
    readonly day?: string;
    /**
     * The month to run this rule at
     *
     * @default - Every month
     */
    readonly month?: string;
    /**
     * The year to run this rule at
     *
     * @default - Every year
     */
    readonly year?: string;
    /**
     * The day of the week to run this rule at
     *
     * @default - Any day of the week
     */
    readonly weekDay?: string;
    /**
     * Retrieve the expression for this schedule
     *
     * @default TimeZone.ETC_UTC
     */
    readonly timeZone?: TimeZone;
}
